@using Lobbies;
@using Wolfden.Shared.Models;
@inject IHttpClientFactory HttpClientFactory
@page "/join"

<Primary BackUrl="/">
    
    <PrimaryContent>
        <Brand />
        <BlokHeader Title="Join" />
    </PrimaryContent>
</Primary>

<Secondary>
    <Content>
        <div id="join">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Name</th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Lobbies.Count; i++)
                    {
                        var lobby = Lobbies[i];
                        <tr>
                            <th scope="row">@i</th>
                            <td><a href="/lobby/@lobby.Id">@lobby.Name</a></td>
                        </tr>
                    }
                </tbody>
            </table>
            <button class="btn btn-secondary" @onclick="Refresh">Refresh <i class="fas fa-redo"></i></button>
        </div>
    </Content>
</Secondary>


@code {
    List<LobbyListItem> Lobbies { get; set; } = new();
    HttpClient Client { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Client = HttpClientFactory.CreateClient("Wolfden.ServerAPI.Anonymous");
        Lobbies = await Client.GetFromJsonAsync<List<LobbyListItem>>("api/getLobbies");
        await base.OnInitializedAsync();
    }

    private async Task Refresh()
    {
        Lobbies = await Client.GetFromJsonAsync<List<LobbyListItem>>("api/getLobbies");
    }
}
