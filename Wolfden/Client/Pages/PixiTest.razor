@page "/PixiTest"
@layout EmptyLayout
@using Lupus.Other.MapLoading
@using Newtonsoft.Json
@using Wolfden.Client.Other;
@using LupusBlazor.Pixi;
@using LupusBlazor.Pixi.LupusPixi
@using Lupus.Other;
@using PIXI;
@inject IJSRuntime JSRuntime;
@inject HttpClient Http
@implements IAsyncDisposable;

<div id="test-game"></div>

@code {
    private Application? Application { get; set; }
    private ViewPort? Viewport { get; set; }
    private PixiUnit? Unit { get; set; }
    private PixiUnit? Unit2 { get; set; }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (!firstRender)
        {
            return;
        }

        this.Application = new Application(JSRuntime, "test-game");
        this.Viewport = new ViewPort(this.Application, 3000, 3000);
        this.Application.Stage.AddChild(this.Viewport);

        TileMapLoader loader = new TileMapLoader(JSRuntime);

        var mapString = await Http.GetStringAsync("/api/map/duel");
        var jsonMap = JsonConvert.DeserializeObject<JsonMap>(mapString);

        loader.LoadTileMap(jsonMap, this.Viewport);

    }


    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (this.Application != null)
            this.Application.Dispose();
    }

}
